#Использовать "src/.."
#Использовать logos
#Использовать v8runner
#Использовать telegrambot
#Использовать cmdline
#Использовать json

Перем Лог; // управление логом
Перем Парсер; // чтение параметров командной строки
Перем ПараметрыОбработки; // для хранение основных параметров обработки
Перем Обновлятор; // основной класс обновления
Перем Бот; // управление ботом телеграм для отправки сообщений
Перем ЧатыТелеграм; // массив получателей сообщений

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

// Инициализация параметров
// Возвращаемое значение - Булево
Функция Инициализировать()
	Обновлятор = Новый Обновлятор();
	Обновлятор.УстановитьРежимОтладки(Ложь);
	
	Парсер.ДобавитьПараметр("ПутьКФайлу");
	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
	ПутьКФайлу = Параметры["ПутьКФайлу"];
	Лог.Информация(ПутьКФайлу);
	
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		ВызватьИсключение "Не указан файл-настроек";
	КонецЕсли;
	
	Файл = Новый Файл(ПутьКФайлу);
	Если Не Файл.Существует() Тогда
		ВызватьИсключение СтрШаблон("Не удается найти файл настроек %1", ПутьКФайлу);
	КонецЕсли;
	
	Чтение = Новый ЧтениеJSON();
	Чтение.ОткрытьФайл(ПутьКФайлу, КодировкаТекста.UTF8);
	ПараметрыОбработки = ПрочитатьJSON(Чтение, Ложь);
	Чтение.Закрыть();
	
	Если ЗначениеЗаполнено(ПараметрыОбработки.ПараметрыОбновления.ТокенТелеграмБота) Тогда
		Бот = Новый ТелеграмБот;
		Бот.УстановитьТокенАвторизации(ПараметрыОбработки.ПараметрыОбновления.ТокенТелеграмБота);
		
		ЧатыТелеграм = ПараметрыОбработки.ПараметрыОбновления.ЧатыТелеграм;
	Иначе
		Бот = Неопределено;
	КонецЕсли;

	ЗапуститьОбработку();
	
	Возврат Истина;
КонецФункции

Процедура ЗапуститьОбработку()
	КоличествоБаз = ПараметрыОбработки.БазыДляОбновления.Количество();
	н = 1;
	Для каждого ПараметрыИБ Из ПараметрыОбработки.БазыДляОбновления Цикл
		Если ПараметрыИБ.Включено Тогда
			ОбновитьИБ(ПараметрыИБ);
		Иначе
			ТекстСообщения = СтрШаблон("%1 - пропуск", ПараметрыИБ.Идентификатор);
			ТипСообщения = 1;
			ОтправитьСообщениеЧерезТелеграм(ТекстСообщения, ТипСообщения);

			Лог.Информация(ТекстСообщения);
		КонецЕсли;
		н = н + 1;
	КонецЦикла;
КонецПроцедуры

Функция ОбновитьИБ(ПараметрыИБ)
	ТекстСообщения = СтрШаблон(
			"%1 - старт", 
			ПараметрыИБ.Идентификатор);
		ТипСообщения = 3;
	ОтправитьСообщениеЧерезТелеграм(ТекстСообщения, ТипСообщения);
	Лог.Информация(ТекстСообщения);
	
	Если ПараметрыИБ.Свойство("ИмяПользователяДляОбновлений") Тогда
		Обновлятор.УстановитьПараметрыАутентификации(
			ПараметрыИБ.ИмяПользователяДляОбновлений, 
			ПараметрыИБ.ПарольПользователяДляОбновлений);
	Иначе
		Обновлятор.УстановитьПараметрыАутентификации(
			ПараметрыОбработки.ПараметрыОбновления.ИмяПользователяДляОбновлений, 
			ПараметрыОбработки.ПараметрыОбновления.ПарольПользователяДляОбновлений);
	КонецЕсли;
	
	Обновлятор.УстановитьКаталоги(
		ПараметрыОбработки.ПараметрыОбновления.КаталогФайловОбновления, 
		ПараметрыОбработки.ПараметрыОбновления.КаталогВременныхФайлов);

	Обновлятор.УстановитьПараметрыБлокировкиCеансов(Истина, Ложь, 5);

	Обновлятор.УстановитьПараметрыПодключенияКбазе(ПараметрыИБ.ИмяКоннектора);
	
	// Бухгалтерия предприятия, редакция 3.0
	ПараметрыОбновленияКонфигурации = Обновлятор.ПолучитьПараметрыОбновленияКонфигурации(
		ПараметрыИБ.ТипКонфигурации,
		ПараметрыИБ.ВерсияРелиза,
		ПараметрыИБ.ВерсияПлатформыСокр,
		ПараметрыИБ.ЗавершениеРаботыПользователейПередОбновлением);
	
	Если ПараметрыОбновленияКонфигурации <> Неопределено Тогда		
		ПараметрыПодключения = Обновлятор.ПолучитьПараметрыПодключения(
			1, 
			, 
			ПараметрыИБ.ИмяСервера1С, 
			ПараметрыИБ.ИмяБазы, 
			Ложь, 
			ПараметрыИБ.ИмяПользователяБазы,
			ПараметрыИБ.ПарольПользователяБазы);

		РезультатОбновления = Обновлятор.ОбновитьИнформационнуюБазу(
			ПараметрыОбновленияКонфигурации, 
			ПараметрыПодключения, 
			Истина);
		
		// тест прохождения без реального обновления
		// ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяУниверсальнаяДата() - 1);
		// РезультатОбновления = (ГСЧ.СлучайноеЧисло(1, 3) <> 2);
		
		Если РезультатОбновления = Истина Тогда
			ТекстСообщения = СтрШаблон("%1 - Ок", ПараметрыИБ.Идентификатор);
			ТипСообщения = 2;
		Иначе	
			ТекстСообщения = СтрШаблон(
				"%1 - ошибка", 
				ПараметрыИБ.Идентификатор);
			ТипСообщения = 0;
		КонецЕсли;
		
		ОтправитьСообщениеЧерезТелеграм(ТекстСообщения, ТипСообщения);

		Лог.Информация(ТекстСообщения);
	КонецЕсли;

	
	Возврат Истина;
КонецФункции

Процедура ОтправитьСообщениеЧерезТелеграм(ТекстСообщения, ТипСообщения)
	СмайлУспеха = КодироватьСтроку(Символ(9989), СпособКодированияСтроки.КодировкаURL);
	СмайлОшибки = КодироватьСтроку(Символ(10060), СпособКодированияСтроки.КодировкаURL);
	СмайлСнежинка = КодироватьСтроку(Символ(10052), СпособКодированияСтроки.КодировкаURL);
	СмайлНачала = КодироватьСтроку(Символ(10071), СпособКодированияСтроки.КодировкаURL);
	Если ТипСообщения = 2 Тогда
		ТекстОтправки = СмайлУспеха + " " + ТекстСообщения;
	ИначеЕсли ТипСообщения = 1 Тогда
		ТекстОтправки = СмайлСнежинка + " " + ТекстСообщения;
	ИначеЕсли ТипСообщения = 3 Тогда
		ТекстОтправки = СмайлНачала + " " + ТекстСообщения;
	Иначе
		ТекстОтправки = СмайлОшибки + " " + ТекстСообщения;
	КонецЕсли;
	
	Если Бот <> Неопределено Тогда
		Для каждого Чат Из ЧатыТелеграм Цикл
			Сообщение = ТелеграмАПИ.НовоеСообщение(Чат, ТекстОтправки);
			Результат = Бот.Отправить(Сообщение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.lib.AutoUpdateIB");
ФайлЖурнала = Новый ВыводЛогаВФайл;
ИмяФайлаЛога = СтрШаблон(
	".\log\AutoUpdateLog_%1.log", 
	Формат(ТекущаяУниверсальнаяДата(), "ДФ=yyyy_MM_dd_hh_mm"));
ФайлЖурнала.ОткрытьФайл(ИмяФайлаЛога);
ВыводВКонсоль = Новый ВыводЛогаВКонсоль;
Лог.ДобавитьСпособВывода(ВыводВКонсоль);
Лог.ДобавитьСпособВывода(ФайлЖурнала);
//УстановитьРежимОтладки(Истина);
Парсер = Новый ПарсерАргументовКоманднойСтроки();
Инициализировать();